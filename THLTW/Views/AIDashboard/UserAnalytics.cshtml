@model THLTW.Models.ViewModels.UserAnalyticsViewModel

@{
    ViewData["Title"] = "User Analytics";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1>
                    <i class="fas fa-user-chart text-primary"></i>
                    User Analytics
                </h1>
                <a href="@Url.Action("Index")" class="btn btn-secondary">
                    <i class="fas fa-arrow-left"></i> Back to Dashboard
                </a>
            </div>
        </div>
    </div>

    <!-- User Selection -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5><i class="fas fa-search"></i> Select User</h5>
                </div>
                <div class="card-body">
                    <form method="get">
                        <div class="row">
                            <div class="col-md-8">
                                <select name="userId" class="form-control" onchange="this.form.submit()">
                                    <option value="">Select a user...</option>
                                    @if (Model.AllUsers != null)
                                    {                                        @foreach (var user in Model.AllUsers)
                                        {
                                            var isSelected = user.Id == Model.SelectedUserId;
                                            <option value="@user.Id" selected="@isSelected">
                                                @user.UserName (@user.Email)
                                            </option>
                                        }
                                    }
                                </select>
                            </div>
                            <div class="col-md-4">
                                <button type="submit" class="btn btn-primary">
                                    <i class="fas fa-analytics"></i> Analyze User
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    @if (Model.SelectedUser != null)
    {
        <!-- User Overview -->
        <div class="row mb-4">
            <div class="col-md-3">
                <div class="card bg-info text-white">
                    <div class="card-body text-center">
                        <h3>@Model.TotalActivities</h3>
                        <p>Total Activities</p>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card bg-success text-white">
                    <div class="card-body text-center">
                        <h3>@Model.ProductsViewed</h3>
                        <p>Products Viewed</p>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card bg-warning text-white">
                    <div class="card-body text-center">
                        <h3>@Model.ReviewsWritten</h3>
                        <p>Reviews Written</p>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card bg-danger text-white">
                    <div class="card-body text-center">
                        <h3>@Model.AverageSessionDuration</h3>
                        <p>Avg Session (min)</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- User Profile -->
        <div class="row mb-4">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h5><i class="fas fa-user"></i> User Profile</h5>
                    </div>
                    <div class="card-body">
                        <table class="table table-borderless">
                            <tr>
                                <td><strong>Username:</strong></td>
                                <td>@Model.SelectedUser.UserName</td>
                            </tr>
                            <tr>
                                <td><strong>Email:</strong></td>
                                <td>@Model.SelectedUser.Email</td>
                            </tr>
                            <tr>
                                <td><strong>Email Confirmed:</strong></td>
                                <td>
                                    <span class="badge badge-@(Model.SelectedUser.EmailConfirmed ? "success" : "warning")">
                                        @(Model.SelectedUser.EmailConfirmed ? "Yes" : "No")
                                    </span>
                                </td>
                            </tr>
                            <tr>
                                <td><strong>Member Since:</strong></td>
                                <td>@Model.SelectedUser.LockoutEnd?.ToString("MMM dd, yyyy") ?? "Unknown"</td>
                            </tr>
                            <tr>
                                <td><strong>Last Activity:</strong></td>
                                <td>@Model.LastActivity?.ToString("MMM dd, yyyy HH:mm") ?? "No activity"</td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h5><i class="fas fa-chart-pie"></i> Activity Breakdown</h5>
                    </div>
                    <div class="card-body">
                        @if (Model.ActivityBreakdown?.Any() == true)
                        {
                            @foreach (var activity in Model.ActivityBreakdown)
                            {
                                <div class="mb-3">
                                    <div class="d-flex justify-content-between">
                                        <span>@activity.Key</span>
                                        <span class="badge badge-primary">@activity.Value</span>
                                    </div>
                                    <div class="progress" style="height: 20px;">
                                        <div class="progress-bar" role="progressbar" 
                                             style="width: @((double)activity.Value / Model.TotalActivities * 100)%">
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <p class="text-muted">No activity data available.</p>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Recent Activities Timeline -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h5><i class="fas fa-timeline"></i> Recent Activities Timeline</h5>
                    </div>
                    <div class="card-body">
                        @if (Model.RecentActivities?.Any() == true)
                        {
                            <div class="timeline">
                                @foreach (var activity in Model.RecentActivities.Take(10))
                                {
                                    <div class="timeline-item">
                                        <div class="timeline-marker bg-@GetActivityColor(activity.ActivityType)"></div>
                                        <div class="timeline-content">
                                            <h6 class="timeline-title">
                                                @activity.ActivityType
                                                @if (activity.Product != null)
                                                {
                                                    <span class="text-muted">- @activity.Product.Name</span>
                                                }
                                            </h6>
                                            <p class="timeline-text">
                                                @activity.Timestamp.ToString("MMM dd, yyyy HH:mm:ss")
                                                @if (!string.IsNullOrEmpty(activity.IpAddress))
                                                {
                                                    <small class="text-muted">from @activity.IpAddress</small>
                                                }
                                            </p>
                                            @if (!string.IsNullOrEmpty(activity.Metadata))
                                            {
                                                <small class="text-info">@activity.Metadata</small>
                                            }
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <p class="text-muted">No recent activities found.</p>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Viewing Preferences -->
        <div class="row mb-4">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h5><i class="fas fa-heart"></i> Favorite Categories</h5>
                    </div>
                    <div class="card-body">
                        @if (Model.FavoriteCategories?.Any() == true)
                        {
                            @foreach (var category in Model.FavoriteCategories.Take(5))
                            {
                                <div class="d-flex justify-content-between mb-2">
                                    <span>@category.Key</span>
                                    <span class="badge badge-secondary">@category.Value views</span>
                                </div>
                            }
                        }
                        else
                        {
                            <p class="text-muted">No category preferences found.</p>
                        }
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h5><i class="fas fa-star"></i> Recent Reviews</h5>
                    </div>
                    <div class="card-body">
                        @if (Model.RecentReviews?.Any() == true)
                        {
                            @foreach (var review in Model.RecentReviews.Take(3))
                            {
                                <div class="mb-3 border-bottom pb-2">
                                    <div class="d-flex justify-content-between">
                                        <strong>@review.Product?.Name</strong>
                                        <div>
                                            @for (int i = 1; i <= 5; i++)
                                            {
                                                <i class="fas fa-star @(i <= review.Rating ? "text-warning" : "text-muted")"></i>
                                            }
                                        </div>
                                    </div>
                                    <p class="small text-muted mb-1">@review.Comment</p>
                                    <small class="text-info">@review.ReviewDate.ToString("MMM dd, yyyy")</small>
                                </div>
                            }
                        }
                        else
                        {
                            <p class="text-muted">No reviews written yet.</p>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Recommendations for this User -->
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h5><i class="fas fa-robot"></i> AI Recommendations for @Model.SelectedUser.UserName</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <button class="btn btn-primary" onclick="loadRecommendations('@Model.SelectedUserId')">
                                    <i class="fas fa-brain"></i> Generate Recommendations
                                </button>
                            </div>
                        </div>
                        <div id="recommendations-container" class="mt-3" style="display: none;">
                            <div class="row" id="recommendations-list">
                                <!-- Recommendations will be loaded here -->
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="row">
            <div class="col-12">
                <div class="alert alert-info text-center">
                    <i class="fas fa-info-circle"></i>
                    Please select a user to view their analytics.
                </div>
            </div>
        </div>
    }
</div>

@functions {
    string GetActivityColor(string activityType)
    {
        return activityType switch
        {
            "View" => "info",
            "AddToCart" => "success",
            "Purchase" => "primary",
            "Search" => "warning",
            "Browse" => "secondary",
            _ => "light"
        };
    }
}

<script>
    async function loadRecommendations(userId) {
        const container = document.getElementById('recommendations-container');
        const list = document.getElementById('recommendations-list');
        
        try {
            container.style.display = 'block';
            list.innerHTML = '<div class="col-12 text-center"><i class="fas fa-spinner fa-spin"></i> Loading recommendations...</div>';
            
            const response = await fetch(`/api/ai/user-recommendations/${userId}`);
            const recommendations = await response.json();
            
            if (recommendations && recommendations.length > 0) {
                list.innerHTML = '';
                recommendations.forEach(product => {
                    list.innerHTML += `
                        <div class="col-md-4 mb-3">
                            <div class="card">
                                <div class="card-body">
                                    <h6 class="card-title">${product.name}</h6>
                                    <p class="card-text">${product.description ? product.description.substring(0, 100) + '...' : 'No description'}</p>
                                    <span class="badge badge-success">$${product.price}</span>
                                    <span class="badge badge-info">Score: ${Math.round(product.score * 100)}%</span>
                                </div>
                            </div>
                        </div>
                    `;
                });
            } else {
                list.innerHTML = '<div class="col-12"><div class="alert alert-warning">No recommendations available for this user.</div></div>';
            }
        } catch (error) {
            list.innerHTML = '<div class="col-12"><div class="alert alert-danger">Error loading recommendations.</div></div>';
            console.error('Error loading recommendations:', error);
        }
    }
</script>

<style>
    .timeline {
        position: relative;
        padding-left: 30px;
    }
    
    .timeline-item {
        position: relative;
        margin-bottom: 20px;
    }
    
    .timeline-marker {
        position: absolute;
        left: -35px;
        top: 5px;
        width: 12px;
        height: 12px;
        border-radius: 50%;
        border: 2px solid #fff;
    }
    
    .timeline-item::before {
        content: '';
        position: absolute;
        left: -30px;
        top: 0;
        bottom: -20px;
        width: 2px;
        background: #e9ecef;
    }
    
    .timeline-item:last-child::before {
        display: none;
    }
    
    .timeline-content {
        background: #f8f9fa;
        padding: 15px;
        border-radius: 5px;
        border-left: 3px solid #007bff;
    }
    
    .timeline-title {
        margin-bottom: 5px;
        font-weight: 600;
    }
    
    .timeline-text {
        margin-bottom: 0;
        color: #6c757d;
    }
</style>
